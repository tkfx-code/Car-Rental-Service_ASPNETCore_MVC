@using Microsoft.AspNetCore.Identity
@model MVC_Project.Models.BookingViewModel

@{
    ViewData["Title"] = "Create";
}
@if (User.Identity.IsAuthenticated)
    {
    <h1>Create</h1>

    <h4>Booking Details</h4>
    <hr />
    <form asp-action="Create" onsubmit="return confirm('Your booking was successful!');">
    <div class="row">
        <div class="col-md-4">
            <dl class="row">
                    <dt> Customer Info </dt>
                    <dd>@Html.DisplayFor(model => model.Customer.FirstName) @Html.DisplayFor(model => model.Customer.LastName)</dd>
					<dd>@Html.DisplayFor(model => model.Customer.Email)</dd>

                    <dt> Car Info </dt>
                    <dd>@Html.DisplayNameFor(model => model.Car.Make) @Html.DisplayNameFor(model => model.Car.Model)</dd>
                </dl>

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="StartDate" class="control-label"></label>
                    <input asp-for="StartDate" type="date" class="form-control" />
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="EndDate" class="control-label"></label>
                    <input asp-for="EndDate" type="date" class="form-control" />
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>

                <input type="hidden" asp-for="CarId" />
                <div class="form-group mt-2">
                    <input type="submit" value="Confirm Booking" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>

    <br>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    }
    else
    {
	    <h1>Please log in to create a booking.</h1>
    }

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
